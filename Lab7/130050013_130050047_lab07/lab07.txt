													LAB 07

Name - Animesh Baranawal (130050013)
		Lokit Kumar Paras (130050047)


Exercise 2
----------
2. ID of root bridge = 8000.fefd00000301

3.

LAN SEGMENT			DESIGNATED BRIDGE

Net0				UML-3(8000.fefd00000301)

Net1				UML-3(8000.fefd00000301)

Net2				UML-5(8000.fefd00000501)	  

Net3				UML-7(8000.fefd00000701)


5. ID of new root bridge = 8000.fefd00000501

LAN SEGMENT			DESIGNATED BRIDGE

Net0 				UML-7(8000.fefd00000701)

Net1				UML-5(8000.fefd00000501)

Net2				UML-5(8000.fefd00000501)

Net3				UML-7(8000.fefd00000701)

#####################################################################################################################

Exercise 3
----------

1. 	The IP address 10.0.0.5 corresponds to uml-4.
	The default interface for ping mechanism is eth1 for uml-3. But uml-4 is connected to the eth2 interface of uml-3. 
	Therefore, uml-3 is not able to ping uml-4.

2.  Because ping -I assigns the interface through which the ping mechanism will work. Therefore,
    ping -I eth2 10.0.0.5 works as 10.0.0.5 is connected to the eth2 interface of uml-3.

3.  The default interface of uml-3 is eth1. Hence when we try to ping uml-3 from uml-4 with or without -I it will anyways reach 
	uml-3 on interface eth2. Hence, uml-3 is not able to recieve any messages from uml-4.

4.	route add -host 10.0.0.5 eth2

######################################################################################################################

Exercise 4
-----------

1.	route -n for uml-1 gives :

	Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
	10.0.0.0        0.0.0.0         255.255.255.0   U     0      0        0 eth1

	Therefore, when the request for IP packets with IP 10.0.1.1, it first tries to find the address in its routing table. It does not find the address in its routing table as the address does not correspond to the LAN segment Net0. Then it tries to find the default gateway which is also not yet specified in the routing table hence the host drops the packet all together.

2. The problem can be solved by simply adding the ip address of host 10.0.1.1 in the routing table of uml1

	this can be done using command  - route add -host 10.0.1.1 eth1

	Now the ping 10.0.1.1 command starts working as not when it consults its routing table it knows which interface it needs to send the packet on to reach 10.0.1.1
	
3.	When we try to ping 10.0.1.2 it does not find the ip address in its routing table , also the host does not have a default 
	gateway. Hence the packet gets dropped at the host itself.

	It does not go to any other hosts.

4.  a)
		We convert the uml3 to a router using “echo 1 > /proc/sys/net/ipv4/ip_forward" and this enables ip forwarding at that node. However this still does not work as uml1 does not know what to do for packets with ip address 10.0.1.2.  Its routing table does not have any entries corresponding to it. So ping 10.0.1.2 still leads to dropping of packets at the host

	b)  For making ping work,we need to add the entry related to network 10.0.1.* in the routing table of uml1 and also the 
		gateway that needs to be used for that. Command used for this is 
	
		->  route add -net 10.0.1.0 netmask 255.255.255.0 gw 10.0.0.3 eth1

		Also we need to add the entry related to the network 10.0.1.0 through gateway 10.0.1.1

		->   route add -net 10.0.1.0 netmask 255.255.255.0 gw 10.0.1.1 eth1



5. For enabling communication between 10.0.0.1 and 10.0.2.2

	 We need to do all the commands that we did in part 4 of the question
	 along with these:

	 we need to add entries related to network 10.0.2.0 in uml1, uml3 as follows:


		->    route add -net 10.0.2.0 netmask 255.255.255.0 gw 10.0.0.3 eth1   =>  at uml1

		->    route add -net 10.0.2.0 netmask 255.255.255.0 gw 10.0.1.2 eth2	 =>  at uml3



	Also we need to add entries related to network 10.0.0.0 in the uml4 and uml5 as follows:

		->    route add -net 10.0.0.0 netmask 255.255.255.0 gw 10.0.2.1 eth1    =>  at uml5

		->    route add -net 10.0.0.0 netmask 255.255.255.0 gw 10.0.1.1 eth1    => at uml4

